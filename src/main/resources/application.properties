# 데이터베이스
# H2 콘솔 접근 설정 (MySQL에서는 필요 없으므로 비활성화 가능)
spring.h2.console.enabled=false

# MySQL 데이터베이스 접속을 위한 JDBC URL
spring.datasource.url=jdbc:mysql://localhost:3306/mydb

# MySQL 데이터베이스 드라이버 클래스명
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

# 데이터베이스 사용자명
spring.datasource.username=root

# 데이터베이스 비밀번호
spring.datasource.password=v1010326001!

# JPA 설정

# 데이터베이스 엔진 타입: hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# spring.jpa.hibernate.ddl-auto 설정
# none - 엔티티가 변경되더라도 데이터베이스를 변경하지 않음
# update - 엔티티의 변경된 부분만 적용
# validate - 변경 사항만 검사
# create - 서버가 시작될 때 모든 데이터를 삭제하고 다시 생성
# create-drop - create와 동일하지만 서버가 종료될 때도 모든 데이터를 삭제
spring.jpa.hibernate.ddl-auto=update

# SQL 쿼리를 보기 쉽게 포맷하여 출력
spring.jpa.properties.hibernate.format_sql=true

# 콘솔에 SQL 쿼리 출력
spring.jpa.properties.hibernate.show_sql=true


# 네이버 OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=NMCPAxsKGhoOXyefmjMQ
spring.security.oauth2.client.registration.naver.client-secret=lsP8P2jVJx
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=profile
spring.security.oauth2.client.registration.naver.client-name=Naver

# 네이버 프로바이더 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response



